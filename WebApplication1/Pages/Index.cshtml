@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<body id="Body1">
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container" >
                <a class="navbar-brand" asp-area="" asp-page="/Index">PassGen</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
    using RandomPos;
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Privacy">Privacy</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>

    </header>
        
    <footer class="border-top footer text-muted" onmousemove="bt1(event)">
        <div class="container">
            &copy; 2024 - WebApplication1 - <a asp-area="" asp-page="/Privacy">Privacy</a>
        </div>
    </footer>
    <Div class="cont">
        
    <div id="passName">
        
    <h1 class="display-4">Welcome</h1>
    <div id="d1">
        
    <p>nome da senha</p>

    <input id="passwordname" type="text">
    <button onclick="btn()">confirm</button>
    
    </div></div>
    

    <div id="passList">
        <table>
            <thead>
                <tr>
                    <th>Nome</th>
                    <th>Senha</th>
                    <th>Data</th>
                </tr>
            </thead>
            <tbody id="TheRow">
                <tr>
                    <td>Netflix</td>
                    <td>dafr3323</td>
                    <td>23/02/12</td>
                </tr>
            </tbody>
        </table>
            
    </div>
    </Div>
     @section Scripts {    
    <script>
       const B1 = document.getElementById("Body1");
       const PassName = document.getElementById("passwordname");
       const table = document.getElementById("TheRow");
        
        var InfoSausage = [];
        //bagui de carregar a pagina paizin
        document.addEventListener("DOMContentLoaded", () => {
            function registrarPosicaoInicial(e) {
                const posicaoInicialMouse = { x: e.clientX, y: e.clientY, sX: e.screenX, sY: e.screenY, pX: e.pageX, pY: e.pageY};
                InfoSausage.push(posicaoInicialMouse.pX, posicaoInicialMouse.pY, posicaoInicialMouse.sX, posicaoInicialMouse.sY, posicaoInicialMouse.x, posicaoInicialMouse.y);
                console.log("Posição inicial do infosausage:", InfoSausage);

                
                document.removeEventListener("mousemove", registrarPosicaoInicial);
            }
            const requestXhttp = new XMLHttpRequest();
            
            requestXhttp.onload = () =>{

                if(requestXhttp.status == 200){
                   

                    PagList(requestXhttp.response)
                }else{
                    console.log("deu ruim fml", requestXhttp.response);
                    
                }
            }
            requestXhttp.open("GET", "http://localhost:5118/A3", true);
            requestXhttp.send();
                
            document.addEventListener("mousemove", registrarPosicaoInicial);
        });
        //termine aqui se perde n
        
        setInterval(AjaxCallBack, 5000);
        B1.onmousemove(bt1);
        function bt1(event){
            if(InfoSausage.length > 8){
                InfoSausage.splice(0, 3);
            }
            InfoSausage.push(event.clientY, event.clientX, event.screenX);
        
            //console.log(InfoSausage);
        }

        

        async function AjaxCallBack(param){
           const requestXhttp = new XMLHttpRequest();
            requestXhttp.onload = ()=>{
                  if (requestXhttp.status === 200) {
                    // Sucesso: tratar a resposta aqui
                    console.log(requestXhttp.responseText);
                } else {
                    // Tratar erros, se necessário
                    console.error("Erro na requisição:", requestXhttp.statusText, requestXhttp.status);

                }
            }
           
            requestXhttp.open("POST", "http://localhost:5118/A1", true);
            requestXhttp.setRequestHeader("Content-Type", "application/json");
            await requestXhttp.send(JSON.stringify(InfoSausage))
            
        }

        async function btn(){
            const requestXhttp = new XMLHttpRequest();
              requestXhttp.onload = ()=>{
                  if (requestXhttp.status === 200) {
                    
                    console.log(requestXhttp.responseText);
                    PagList(requestXhttp.responseText);
                } else {
                    console.error("Erro na requisição:", requestXhttp.statusText, requestXhttp.status);
                }
            }

            requestXhttp.open("POST", "http://localhost:5118/A2", true);
            requestXhttp.setRequestHeader("Content-Type", "application/json");
            await requestXhttp.send(JSON.stringify(PassName.value));
        }

        function PagList(param){
            var x;
            const paramParsed = JSON.parse(param);
            console.log(paramParsed);
            if(paramParsed.length > 1){

                paramParsed.forEach((par) =>{
                    const newTr = document.createElement("tr");
                    var td1 = document.createElement("td"); td1.innerHTML = par.passwordName;
                    var td2 = document.createElement("td"); td2.innerHTML = par.caracsGenerateds;
                    
                    table.appendChild(newTr);
                    newTr.appendChild(td1); newTr.appendChild(td2);
                })
            }else{
                    const newTr = document.createElement("tr");
                    var td1 = document.createElement("td"); td1.innerHTML = paramParsed.passwordName;
                    var td2 = document.createElement("td"); td2.innerHTML = paramParsed.caracsGenerateds;
                    
                    table.appendChild(newTr);
                    newTr.appendChild(td1); newTr.appendChild(td2);
            }

        }
    </script>}

</div>
    
</body>

